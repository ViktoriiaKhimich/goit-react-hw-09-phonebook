{"version":3,"sources":["shared/components/FormInput/FormInput.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","shared/components/FormInput/FormInput.jsx","shared/components/Button/Button.module.css","shared/components/Button/Button.jsx","client/authorisation/components/RegistrationForm/RegistrationForm.module.css","client/authorisation/components/RegistrationForm/fields.js","client/authorisation/components/RegistrationForm/initialState.js","client/authorisation/components/RegistrationForm/RegistrationForm.jsx","client/authorisation/pages/RegistrationPage/RegistrationPage.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","classname","props","className","styles","searchField","defaultProps","required","placeholder","name","type","onChange","Button","children","btn","fields","initialState","email","password","RegistrationForm","useState","formData","setFormData","dispatch","useDispatch","handleChange","e","target","reset","form","onSubmit","preventDefault","operations","register","formInput","htmlFor","formField","field","RegistrationPage"],"mappings":"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","file":"static/js/5.233b4da2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchField\":\"FormInput_searchField__1vQV9\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport typeOptions from './typeOptions'\n\nimport styles from './FormInput.module.css'\n\nconst FormInput = ({ classname, ...props }) => {\n    return (<>\n        <input className={`${styles.searchField} ${classname}`} {...props} />\n    </>);\n}\n\nFormInput.defaultProps = {\n    required: false,\n    placeholder: '',\n    name: '',\n    className: '',\n    type: 'text',\n    value: '',\n    onChange: () => { }\n}\n\nFormInput.propTypes = {\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    type: PropTypes.oneOf(typeOptions),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default FormInput;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1rFyd\"};","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './Button.module.css'\n\nconst Button = ({ children }) => {\n    return (<button className={styles.btn} type='submit'>{children}</button>);\n}\n\nButton.defaultProps = {\n    type: 'submit',\n    classname: '',\n}\n\nButton.propTypes = {\n    type: PropTypes.string,\n    classname: PropTypes.string,\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__2oSLC\",\"formInput\":\"RegistrationForm_formInput__25Gct\",\"formField\":\"RegistrationForm_formField__1XQ8a\"};","export const fields = {\n    name: {\n        type: 'text',\n\n        name: 'name',\n        required: true,\n        placeholder: \"Name\"\n    },\n    email: {\n        type: 'text',\n\n        name: 'email',\n        required: true,\n        placeholder: \"Email\"\n    },\n    password: {\n        type: 'text',\n\n        name: 'password',\n        required: true,\n        placeholder: \"Password\"\n    }\n}","export const initialState = {\n    name: '',\n    email: '',\n    password: '',\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { fields } from './fields'\nimport { initialState } from './initialState'\nimport Button from '../../../../shared/components/Button'\nimport FormInput from '../../../../shared/components/FormInput'\nimport { connect } from 'react-redux'\nimport operations from '../../redux/auth/operations'\n\nimport styles from './RegistrationForm.module.css'\n\nconst RegistrationForm = () => {\n\n    const [formData, setFormData] = useState(initialState);\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(operations.register(formData))\n        reset()\n    }\n\n    const reset = () => {\n        setFormData(initialState)\n    }\n\n    return (\n        <>\n            <form className={styles.form} onSubmit={handleSubmit}>\n                <div className={styles.formInput}>\n                    <label htmlFor=\"\">Name</label>\n                    <FormInput className={styles.formField} value={formData.name} {...fields.name} onChange={handleChange} classname={styles.field} />\n                    <label htmlFor=\"\">Email</label>\n                    <FormInput className={styles.formField} value={formData.email} {...fields.email} onChange={handleChange} />\n                    <label htmlFor=\"\">Password</label>\n                    <FormInput className={styles.formField} value={formData.password} {...fields.password} onChange={handleChange} />\n                </div>\n                <Button>Register</Button>\n            </form>\n        </>\n    );\n\n}\n\nexport default RegistrationForm;","import React from 'react';\nimport RegistrationForm from '../../components/RegistrationForm'\n\nconst RegistrationPage = () => {\n    return (<>\n        <RegistrationForm />\n    </>);\n}\n\nexport default RegistrationPage;"],"sourceRoot":""}