{"version":3,"sources":["shared/components/FormInput/FormInput.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","shared/components/FormInput/FormInput.jsx","client/contacts/components/ContactFrom/ContactFrom.module.css","client/contacts/components/Filter/Filter.module.css","client/contacts/components/ContactListItem/ContactListItem.module.css","client/contacts/redux/operations.js","../node_modules/uuid/dist/esm-browser/rng.js","client/contacts/components/ContactFrom/fields.js","client/contacts/components/ContactFrom/initialState.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","client/contacts/components/ContactFrom/ContactFrom.jsx","client/contacts/components/Filter/Filter.jsx","client/contacts/components/ContactListItem/ContactListItem.jsx","client/contacts/redux/selectors.js","client/contacts/components/ContactList/ContactList.jsx","client/contacts/pages/PhonebookPage/PhoneBookPage.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","classname","props","className","styles","searchField","defaultProps","required","placeholder","name","type","onChange","fetchContactsRequest","actions","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","getRandomValues","dispatch","get","then","data","catch","error","message","number","contact","post","contactId","delete","fields","initialState","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","ContactFrom","useState","formData","setFormData","useDispatch","handleChange","e","target","contacts","useSelector","phonebook","shallowEqual","reset","nameFieldId","numberFieldId","form","onSubmit","preventDefault","find","item","operations","alert","formInput","htmlFor","formField","Filter","filter","filterFieldId","inputField","input","id","filterContacts","ContactListItem","onClick","contactListItem","btn","filteredContacts","createSelector","state","normalizedFilter","includes","ContactList","contactElements","map","PhonebookPage","loadingContacts","loading","useEffect"],"mappings":"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","file":"static/js/3.a6c9cdc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchField\":\"FormInput_searchField__1vQV9\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport typeOptions from './typeOptions'\n\nimport styles from './FormInput.module.css'\n\nconst FormInput = ({ classname, ...props }) => {\n    return (<>\n        <input className={`${styles.searchField} ${classname}`} {...props} />\n    </>);\n}\n\nFormInput.defaultProps = {\n    required: false,\n    placeholder: '',\n    name: '',\n    className: '',\n    type: 'text',\n    value: '',\n    onChange: () => { }\n}\n\nFormInput.propTypes = {\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    type: PropTypes.oneOf(typeOptions),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default FormInput;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFrom_form__16Sb7\",\"formInput\":\"ContactFrom_formInput__2TK3S\",\"formField\":\"ContactFrom_formField__2RJ7L\",\"errorMessage\":\"ContactFrom_errorMessage__2kHLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Filter_inputField__2-stO\",\"input\":\"Filter_input__1FdOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__Vjiud\",\"btn\":\"ContactListItem_btn__1KOmA\"};","import axios from 'axios';\nimport actions from './actions'\n\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } = actions;\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest())\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => dispatch(fetchContactsError(error.message)))\n}\n\nconst addContact = (name, number) => dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest())\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error.message)));\n}\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error.message)))\n}\n\n\nexport default { fetchContacts, addContact, deleteContact };","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const fields = {\n    name: {\n        type: 'text',\n        value: '',\n        name: 'name',\n        required: true,\n    },\n    number: {\n        type: 'text',\n        value: '',\n        name: 'number',\n        required: true,\n    }\n}","export const initialState = {\n    name: '',\n    number: ''\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState } from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport operations from '../../redux/operations'\nimport FormInput from '../../../../shared/components/FormInput'\nimport { fields } from './fields';\nimport { initialState } from './initialState'\nimport { v4 } from 'uuid'\n\nimport styles from './ContactFrom.module.css'\n\nconst ContactFrom = () => {\n\n    const [formData, setFormData] = useState(initialState)\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const contacts = useSelector(({ phonebook }) => phonebook.contacts, shallowEqual)\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const { name, number } = formData;\n        const contact = contacts.find(item => item.name === name || item.number === number)\n        if (!contact) {\n            dispatch(operations.addContact(name, number))\n            reset()\n            return\n        }\n        alert(`${name} is already in contacts`)\n        reset()\n\n    }\n\n    const reset = () => {\n        setFormData(initialState)\n    }\n\n    const nameFieldId = v4();\n    const numberFieldId = v4();\n\n    return (\n        <>\n            <form className={styles.form} onSubmit={handleSubmit}>\n                <div className={styles.formInput}>\n                    <label htmlFor={nameFieldId}>Name</label>\n                    <FormInput onChange={handleChange} {...fields.name} value={formData.name} className={styles.formField} />\n                    <label htmlFor={numberFieldId}>Number</label>\n                    <FormInput onChange={handleChange} {...fields.number} value={formData.number} className={styles.formField} />\n                </div>\n                <button type=\"submit\">Add contact</button>\n            </form>\n        </>\n    )\n}\n\nexport default ContactFrom;","import React from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types'\nimport actions from '../../redux/actions'\n\nimport styles from './Filter.module.css'\n\nconst Filter = () => {\n\n    const filter = useSelector(({ phonebook }) => phonebook.filter, shallowEqual);\n    const dispatch = useDispatch()\n\n    const filterFieldId = v4();\n\n    return (\n        <div className={styles.inputField}>\n            <label htmlFor={filterFieldId}>Find contacts by name</label>\n            <input\n                className={styles.input}\n                id={filterFieldId}\n                type=\"text\"\n                value={filter}\n                onChange={(e) => dispatch(actions.filterContacts(e.target.value))}\n            />\n        </div>\n    );\n}\n\n\nFilter.defaultProps = {\n    filter: '',\n    onChange: () => { }\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './ContactListItem.module.css'\n\nconst ContactListItem = ({ name, number, onClick }) => {\n    return (\n        <li className={styles.contactListItem}>\n            <p>{name}: {number}</p>\n            <button className={styles.btn} type=\"button\" onClick={onClick}>Delete</button>\n        </li>\n    );\n}\n\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n\nexport default ContactListItem;","import { createSelector } from '@reduxjs/toolkit'\n\nexport const loading = ({ phonebook }) => phonebook.loading;\n\nexport const getFilter = (state) => state.phonebook.filter;\n\nexport const getContacts = (state) => state.phonebook.contacts;\n\nexport const filteredContacts = createSelector(\n    [getFilter, getContacts],\n    (filter, contacts) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    }\n)\n\n// export const filteredContacts = (state) => {\n//     const contacts = getContacts(state);\n//     const filter = getFilter(state);\n\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n// }\n","import React from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem'\nimport operations from '../../redux/operations'\nimport { filteredContacts } from '../../redux/selectors'\n\nconst ContactList = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => filteredContacts(state), shallowEqual)\n\n    const contactElements = contacts.map(({ id, ...props }) => <ContactListItem key={id} {...props} onClick={() => dispatch(operations.deleteContact(id))} />)\n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    }).isRequired)\n}\n\n\nexport default ContactList;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport ContactForm from '../../components/ContactFrom'\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList'\nimport operations from '../../redux/operations'\nimport { loading } from '../../redux/selectors'\n\nconst PhonebookPage = () => {\n\n    const loadingContacts = useSelector(state => loading(state), shallowEqual)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(operations.fetchContacts())\n    }, [])\n\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n\n            {loadingContacts && <h1>...Loading</h1>}\n            <ContactList />\n        </div>\n    )\n\n}\n\nexport default PhonebookPage;"],"sourceRoot":""}